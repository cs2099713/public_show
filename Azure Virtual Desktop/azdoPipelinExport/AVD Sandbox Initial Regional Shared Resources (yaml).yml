trigger:
  branches:
    include:
    - none
stages:
- stage: __default
  jobs:
  - job: TemplateJob
    displayName: TemplateJob
    pool:
      vmImage: windows-2019
    steps:
    - task: 
      inputs:
        repository: self
        fetchDepth: 1
    - task: AzurePowerShell@5
      displayName: Get Template Variables
      name: GetTemplateVariables
      inputs:
        ConnectedServiceNameARM: 
        ScriptPath: sharedPowershellAzure/Get-TemplateVariables.ps1
        ScriptArguments: -templateParameterFile ${env:templateParameterFile}
        TargetAzurePs: LatestVersion
  - job: AzureSharedResources
    displayName: Azure-Shared-Resources
    dependsOn:
    - TemplateJob
    variables:
    - name: DeploymentSubscriptionName
      value: $[ dependencies.TemplateJob.outputs['GetTemplateVariables.DeploymentSubscriptionName' ]]
    - name: DeploymentSubscriptionId
      value: $[ dependencies.TemplateJob.outputs['GetTemplateVariables.DeploymentSubscriptionId'] ]
    - name: dtnow
      value: $[ dependencies.TemplateJob.outputs['GetTemplateVariables.dtnow'] ]
    - name: location
      value: $[ dependencies.TemplateJob.outputs['GetTemplateVariables.location'] ]
    pool:
      vmImage: windows-2019
    steps:
    - task: 
      inputs:
        repository: self
        fetchDepth: 1
    - task: PowerShell@2
      displayName: Get Bicep Variables
      name: GetBicepVariables
      enabled: true
      inputs:
        targetType: inline
        script: >-
          Write-Host "template from Deployment: "${env:template} Write-Host "templateParameterFile from Deployment: "${env:templateParameterFile} Write-Host "location from Deployment: "$(location) Write-Host "DeploymentSubscriptionId from Deployment: "$(DeploymentSubscriptionId)
    - task: AzurePowerShell@5
      displayName: Start Bicep Shared Resource Deployment
      name: StartBicepSharedResourceDeployment
      enabled: true
      inputs:
        ConnectedServiceNameARM: 
        ScriptPath: sharedPowershellAzure/Start-Bicep-Shared-Resource-Deployment.ps1
        ScriptArguments: -subscriptionId $(DeploymentSubscriptionId) -location $(location) -template ${env:template} -templateParameterFile ${env:templateParameterFile}
        TargetAzurePs: LatestVersion
  - job: OnpremSharedResources
    displayName: Onprem-Shared-Resources
    dependsOn:
    - TemplateJob
    - AzureSharedResources
    variables:
    - name: tenantId
      value: $[ dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.tenantId'] ]
    - name: subscriptionId
      value: $[ dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.subscription_ID'] ]
    - name: rg_shared_storage_Name
      value: $[ dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.rg_shared_storage_Name'] ]
    - name: st_fslp_shared_region_Name
      value: $[ dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.st_fslp_shared_region_Name'] ]
    - name: rg_shared_network_Name
      value: $[ dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.rg_shared_network_Name'] ]
    - name: shared_network_Name
      value: $[dependencies.AzureSharedResources.outputs['StartBicepSharedResourceDeployment.shared_network_Name']]
    condition: succeeded()
    pool:
      name: Default
    steps:
    - task: 
      inputs:
        repository: self
        fetchDepth: 1
    - task: PowerShell@2
      displayName: Get Deployment Output
      name: GetDeploymentOutput
      enabled: true
      inputs:
        targetType: inline
        script: >-
          Write-Host "tenantId from Deployment: "$(tenantId) Write-Host "subscriptionId from Deployment: "$(subscriptionId) Write-Host "rg_shared_storage_Name from Deployment: "$(rg_shared_storage_Name) Write-Host "st_fslp_shared_region_Name from Deployment: "$(st_fslp_shared_region_Name) Write-Host "rg_shared_network_Name from Deployment: "$(rg_shared_network_Name) Write-Host "shared_network_Name from Deployment: "$(shared_network_Name) Write-Host "hybridAgentAppId from Deployment: "${env:hybridAgentAppId} Write-Host "hybridAgentDomain from Deployment: "${env:hybridAgentDomain} Write-Host "hybridAgentOuDN from Deployment: "${env:hybridAgentOuDN}
    - task: PowerShell@2
      displayName: Join Storage Account
      name: JoinStorageAccount
      enabled: true
      inputs:
        filePath: 'sharedPowershellHybrid/Join-StorageAccount-AD.ps1'
        arguments: '-thumbprint ${env:hybridAgentThumbprint} -appId ${env:hybridAgentAppId} -tenantId $(tenantId) -subscriptionId $(subscriptionId) -resourceGroupName $(rg_shared_storage_Name) -storageAccountName $(st_fslp_shared_region_Name) -domain ${env:hybridAgentDomain} -ouDN ${env:hybridAgentOuDN}'

